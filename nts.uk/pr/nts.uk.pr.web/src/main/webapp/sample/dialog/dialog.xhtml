<!DOCTYPE html>
<html>
<head>
	<meta charset="UTF-8"></meta>
	<title>Dialog Sample</title>
	
	<!-- CSS -->
	<link rel="stylesheet" type="text/css" href="../../lib/generic/jqueryui/jquery-ui.css" />
	<link rel="stylesheet" type="text/css" href="../../lib/generic/igniteui/css/themes/infragistics/infragistics.theme.css" />
	<link rel="stylesheet" type="text/css" href="../../lib/generic/igniteui/css/structure/infragistics.css" />
	<link rel="stylesheet" type="text/css" href="../../lib/nittsu/ui/style/stylesheets/base.css" />
	<style>
		html, body{position: relative;}
		.container{padding:40px;}
		a{color:#00B050;text-decoration: none;}
		b{font-weight:bold;}
		i{font-style: italic;display:inline-block;min-width:80px;}
		h2{color:#00B050;font-size: 25px; margin-bottom:20px;}
		h3{font-size:16px;margin:3px 0;font-weight:bold;}
		hr{margin: 25px 0;}
		table{float:left;border-collapse: collapse;margin:10px 30px 30px 0;}
		table th, table td{padding: 5px 5px;border:1px solid #ccc;}
		table th{background:#eee;border-bottom-width:2px;}
		table td:first-child{background:#fafafa;}
	</style>
	
	<!-- Script -->
	<script src="../../lib/generic/jquery/jquery-3.1.1.js"></script>
	<script src="../../lib/generic/jqueryui/jquery-ui.min.js"></script>
	<script src="../../lib/generic/knockoutjs/knockout-3.4.0.js"></script>
	<script src="../../lib/generic/knockoutjs/knockout.mapping-2.4.1.js"></script>
	<script src="../../lib/generic/lodash/lodash-4.16.6.min.js"></script>
	<script src="../../lib/nittsu/ui/ko-ext.js"></script>
	<script src="../../lib/nittsu/ui/dialog-options.js"></script>

	<script>
		var __viewContext = {
			primitiveValueConstraints: {
				CompanyCode: {
					valueType: "String",
					charType: "Numeric",
					maxLength: 4
				},
				CompanyName: {
					valueType: "String",
					charType: "Any",
					maxLength: 20
				}
			}
		};
	</script>
	<script>
		$(function () {
			var vm = {
				// Dialog ViewModel
				dialogconfirm: {
					dialogtype: ko.observable("confirm"),
					title: ko.observable("Test title"),
					message: ko.observable("Test message"),
					modal: ko.observable(true),
					show: ko.observable(false),
					buttonSize: ko.observable("large"),
					okButtonColor: ko.observable("danger"),
					okButtonText: ko.observable(""),
					okButtonClicked: function(){
						alert("ok");
					},
					cancelButtonText: ko.observable("いいえ"),
					cancelButtonClicked: function(){
						alert("cancel");
					},
					open: function(){
						var self = this;
						self.show(true);
					},
					hide: function(){
						var self = this;
						self.show(false);
					}
				},
				
				// Dialog ViewModel
				dialogalert: {
					dialogtype: ko.observable("alert"),
					title: ko.observable(""),
					message: ko.observable("Test message"),
					modal: ko.observable(true),
					show: ko.observable(false),
					buttonSize: ko.observable("large"),
					okButtonColor: ko.observable("proceed"),
					okButtonText: ko.observable("OK"),
					okButtonClicked: function(){},
					open: function(){
						var self = this;
						self.show(true);
					},
					hide: function(){
						var self = this;
						self.show(false);
					}
				},

				// Dialog with Option Class
				dialogconfirmoption: {
					option: ko.mapping.fromJS(new ConfirmDialogOption()),
					okButtonClicked: function(){},
					cancelButtonClicked: function(){},
					open: function(){
						var self = this;
						self.option.show(true);
					},
					hide: function(){
						var self = this;
						self.option.show(false);
					}
				},
				
				// Dialog with Option Class
				dialogdeloption: {
					option: ko.mapping.fromJS(new DelDialogOption({message: "You want a message, you get a message."})),
					okButtonClicked: function(){
						alert("ok");
					},
					cancelButtonClicked: function(){
						alert("cancel");
					},
					open: function(){
						var self = this;
						self.option.show(true);
					},
					hide: function(){
						var self = this;
						self.option.show(false);
					}
				},

				// Dialog with Option Class
				dialogokoption: {
					option: ko.mapping.fromJS(new OKDialogOption({title: "A test Title", message: "This is a test message created for test purpose", modal: false})),
					okButtonClicked: function(){},
					cancelButtonClicked: function(){},
					open: function(){
						var self = this;
						self.option.show(true);
					},
					hide: function(){
						var self = this;
						self.option.show(false);
					}
				},
			};
			ko.applyBindings(vm);
		});
	</script>
</head>
<body>
	<div class="container">
		<h2><a href="../../test.html">&#9665;</a> Dialog</h2>
		<hr/>
		<h2>HTML Binding</h2>
		<div data-bind="with: dialogconfirm">
			<button data-bind="click: open" class="danger">Open Confirm Dialog</button>
			<div data-bind="ntsDialog: {dialogtype: dialogtype, title: title, message: message, modal: modal, show: show, buttonSize: buttonSize, okButtonColor: okButtonColor, okButtonText: okButtonText, cancelButtonText: cancelButtonText }"></div>
		</div>
		<br/>
		<div data-bind="with: dialogalert">
			<button data-bind="click: open" class="proceed">Open Alert Dialog</button>
			<div data-bind="ntsDialog: {dialogtype: dialogtype, title: title, message: message, modal: modal, show: show, buttonSize: buttonSize, okButtonColor: okButtonColor, okButtonText: okButtonText }"></div>
		</div>
		<hr/>
		<h2>TypeScript Binding</h2>
		<div data-bind="with: dialogconfirmoption">
			<button data-bind="click: open" class="proceed">Open Confirm Dialog</button>
			<button data-bind="click: hide">Hide Confirm Dialog</button>
			<div data-bind="ntsDialogTest: {option: option}"></div>
		</div>
		<br/>
		<div data-bind="with: dialogdeloption">
			<button data-bind="click: open" class="danger">Open Del Dialog</button>
			<button data-bind="click: hide">Hide Del Dialog</button>
			<div data-bind="ntsDialogTest: {option: option}"></div>
		</div>
		<br/>
		<div data-bind="with: dialogokoption">
			<button data-bind="click: open" class="proceed">Open OK Dialog</button>
			<button data-bind="click: hide">Hide OK Dialog</button>
			<div data-bind="ntsDialogTest: {option: option}"></div>
		</div>
		<hr/>
		
		<!-- API -->
		<h2> API</h2>
		<table>
			<colgroup>
				<col width="200px" />
			</colgroup>
			<thead>
				<tr>
					<th><h3>Options</h3></th>
					<th><h3>Description</h3></th>
				</tr>
			</thead>
			<tbody>
				<tr>
					<td>dialogtype</td>
					<td>
						<b>Type:</b> string<br/>
						<b>Default:</b> ""<br/>
						<b>Members:</b><br/>
						<i>confirm</i>: Show confirm dialog<br/>
						<i>alert</i>: Show alert dialog<br/>
					</td>
				</tr>
				<tr>
					<td>title</td>
					<td>
						<b>Type:</b> string<br/>
						<b>Default:</b> ""<br/>
						Title for dialog
					</td>
				</tr>
				<tr>
					<td>message</td>
					<td>
						<b>Type:</b> string<br/>
						<b>Default:</b> ""<br/>
						Message content for dialog
					</td>
				</tr>
				<tr>
					<td>modal</td>
					<td>
						<b>Type:</b> boolean<br/>
						<b>Default:</b> true<br/>
						<b>Members:</b><br/>
						<i>true</i>: Show dialog in modal mode<br/>
						<i>false</i>: Do not show dialog in modal mode<br/>
					</td>
				</tr>
				<tr>
					<td>show</td>
					<td>
						<b>Type:</b> boolean<br/>
						<b>Default:</b> false<br/>
						<b>Members:</b><br/>
						<i>true</i>: Show dialog onload<br/>
						<i>false</i>: Hide dialog onload<br/>
					</td>
				</tr>
				<tr>
					<td>buttonSize</td>
					<td>
						<b>Type:</b> string<br/>
						<b>Default:</b> "large"<br/>
						<b>Members:</b><br/>
						<i>x-large</i>: Extra large button<br/>
						<i>large</i>: Large button<br/>
						<i>medium</i>: Medium button<br/>
						<i>small</i>: Small button<br/>
					</td>
				</tr>
				<tr>
					<td>okButtonColor</td>
					<td>
						<b>Type:</b> string<br/>
						<b>Default:</b> ""<br/>
						<b>Members:</b><br/>
						<i>danger</i>: Red color. Default on confirm<br/>
						<i>proceed</i>: Green color. Default on alert<br/>
					</td>
				</tr>
				<tr>
					<td>okButtonText</td>
					<td>
						<b>Type:</b> string<br/>
						<b>Default:</b> "はい" or "OK"<br/>
						Text for OK button. Default value for Confirm Dialog is "OK". Delete Dialog and OK Dialog is "はい"
					</td>
				</tr>
				<tr>
					<td>cancelButtonText</td>
					<td>
						<b>Type:</b> string<br/>
						<b>Default:</b> "いいえ"<br/>
						Text for cancel button
					</td>
				</tr>
			</tbody>
		</table>
		<table>
			<colgroup>
				<col width="200px" />
			</colgroup>
			<thead>
				<tr>
					<th><h3>Methods</h3></th>
					<th><h3>Description</h3></th>
				</tr>
			</thead>
			<tbody>
				<tr>
					<td>open()</td>
					<td>
						Show dialog
					</td>
				</tr>
				<tr>
					<td>hide()</td>
					<td>
						Hide dialog
					</td>
				</tr>
			</tbody>
		</table>
		<table>
			<colgroup>
				<col width="200px" />
			</colgroup>
			<thead>
				<tr>
					<th><h3>Events</h3></th>
					<th><h3>Description</h3></th>
				</tr>
			</thead>
			<tbody>
				<tr>
					<td>okButtonClicked()</td>
					<td>
						Triggered when OK button is clicked
					</td>
				</tr>
				<tr>
					<td>cancelButtonClicked()</td>
					<td>
						Triggered when cancel button is clicked
					</td>
				</tr>
			</tbody>
		</table>
	</div>
</body>
</html>