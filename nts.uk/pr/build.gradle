import org.gradle.api.Project

buildscript {
	repositories {
		mavenCentral()
		flatDir {
			dirs "$rootDir/libs"
		}
	}
	dependencies {
		//http://mvnrepository.com/artifact/de.aaschmid.gradle.plugins/gradle-cpd-plugin
		classpath "de.aaschmid.gradle.plugins:gradle-cpd-plugin:0.5"

		//http://mvnrepository.com/artifact/com.bmuschko/gradle-cargo-plugin
		classpath "com.bmuschko:gradle-cargo-plugin:2.2.1"

		//http://mvnrepository.com/artifact/com.eriwen/gradle-js-plugin
		classpath 'com.eriwen:gradle-js-plugin:1.12.0'
	}
}


allprojects {
	apply plugin: 'java'
	apply plugin: 'eclipse'
	apply plugin: 'eclipse-wtp'
	repositories {
		repositories {
			flatDir {
				dirs "$rootDir/libs", 'libs'
			}

			mavenCentral()
			maven {
				name 'aspose'
				url 'http://maven.aspose.com/artifactory/simple/ext-release-local/'
			}
		}
	}
	
	apply from: "$rootDir/gradle/properties.gradle"
	apply from: "$rootDir/gradle/library_properties.gradle"

	//ビルド及び実行は、Java8を対象とする
	sourceCompatibility = "$javaVersion"
	targetCompatibility = "$javaVersion" 

	task cleanandbuildallproject (dependsOn: ['clean', 'build'])<< {
	}
	
	dependencies {
		compile files("\\\\192.168.100.251\\DevelopSource\\Project\\UniversalK\\maven\\nts.gul\\nts.gul-0.2.jar")
		compile files("\\\\192.168.100.251\\DevelopSource\\Project\\UniversalK\\maven\\nts.arc\\nts.arc-0.1.jar")
	}
}

project (':shr:nts.uk.shr.com') {
	dependencies {
	}
}

project (':proto:nts.uk.pr.proto.ws') {
	dependencies {
		compile project(':shr:nts.uk.shr.com')
		compile project(':proto:nts.uk.pr.proto.app')
	}
}
project (':proto:nts.uk.pr.proto.app') {
	dependencies {
		compile project(':shr:nts.uk.shr.com')
		compile project(':proto:nts.uk.pr.proto.dom')
	}
}
project (':proto:nts.uk.pr.proto.infra') {
	dependencies {
		compile project(':shr:nts.uk.shr.com')
		compile project(':proto:nts.uk.pr.proto.dom')
	}
}
project ('nts.uk.pr.web') {
	apply plugin: 'war'
	war {
        baseName= "nts.uk.pr.web"
    }
	def explodedPath = "${buildDir}/exploded"
    def explodedWarPath = "${explodedPath}/${war.baseName}.war"
    def explodedWarDeployPath = "${explodedWarPath}.dodeploy"
    def explodedWarFolder = new File(explodedWarPath);
    def explodedWarDeployFile = new File(explodedWarDeployPath);
    def staticSourcePath = "${rootDir}/nts.uk.pr.web/src/main/webapp"
    def deployPattern = ~/${war.baseName}\.war\.*/

    task explodedWar(type: Copy) {  
        into explodedWarPath
        with war
        doLast {
            explodedWarDeployFile.write ''
        }
    }
    
    war.dependsOn explodedWar
    
    task copyStaticResource(type: Sync) {
        from staticSourcePath
        into explodedWarPath
    }
	dependencies {
		compile project(':shr:nts.uk.shr.com')
		runtime project (':proto:nts.uk.pr.proto.ws')
		runtime project (':proto:nts.uk.pr.proto.app')
		runtime project (':proto:nts.uk.pr.proto.dom')
		runtime project (':proto:nts.uk.pr.proto.infra')
		providedCompile group: 'com.sun.faces', name: 'jsf-api', version: '2.2.13'
	}
}