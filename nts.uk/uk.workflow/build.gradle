import org.gradle.api.Project

apply plugin: 'java'

buildscript {
	repositories {
		maven {
			name 'nsvnmk'
			url 'http://192.168.50.6:8081/artifactory/plugins-release'
		}
	}
	dependencies {
		//http://mvnrepository.com/artifact/de.aaschmid.gradle.plugins/gradle-cpd-plugin
		classpath "de.aaschmid.gradle.plugins:gradle-cpd-plugin:0.5"

		//http://mvnrepository.com/artifact/com.bmuschko/gradle-cargo-plugin
		classpath "com.bmuschko:gradle-cargo-plugin:2.2.1"

		//http://mvnrepository.com/artifact/com.eriwen/gradle-js-plugin
		classpath 'com.eriwen:gradle-js-plugin:1.12.0'
		
		//Check for the latest version here: http://plugins.gradle.org/plugin/com.jfrog.artifactory
		classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4+"
		
		classpath 'de.richsource.gradle.plugins:typescript-gradle-plugin:1.8.0'
	}
}

//すべてのプロジェクトに適応すべき内容はここに追記する
allprojects {
	apply from: "$rootDir/gradle/properties.gradle"
	apply from: "$rootDir/gradle/library_properties.gradle"
	apply plugin: "com.jfrog.artifactory"

	//ビルド及び実行は、Java8を対象とする
	sourceCompatibility = "$javaVersion"
	targetCompatibility = "$javaVersion" 

	task cleanandbuildallproject (dependsOn: ['clean', 'build'])<< {
	}
}

subprojects {
	apply plugin: 'java'
	apply plugin: 'eclipse'
	apply plugin: 'eclipse-wtp'
	repositories {
		maven {
			name 'aspose'
			url 'http://maven.aspose.com/artifactory/simple/ext-release-local/'
		}
	}
	
	//compileJavaとcompileTestJavaの実行時の文字コードをunicodeで指定
	[compileJava, compileTestJava]*.options*.encoding = "$defaultEncoding"
	
	dependencies {
	   // Apache commons lang
		compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.5'
		
		// Lombok
		compile group: 'org.projectlombok', name: 'lombok', version: '1.16.10'
		
		// JUnit
		testCompile group: 'junit', name: 'junit', version: '4.12'
		testCompile group: 'org.hamcrest', name: 'hamcrest-library', version: '1.3'
		
		// JMockit
		testCompile group: 'org.jmockit', name: 'jmockit', version: '1.28'
		
		// CDI
		compileOnly group: 'javax.enterprise', name: 'cdi-api', version: '1.2'

		// EJB
		compileOnly group: 'javax.ejb', name: 'javax.ejb-api', version: '3.2'
		
		// Concurrency Utilities for Java EE
		compile group: 'javax.enterprise.concurrent', name: 'javax.enterprise.concurrent-api', version: '1.0'
		
		// JPA
		compile group: 'org.eclipse.persistence', name: 'javax.persistence', version: '2.1.1'
		compile group: 'org.eclipse.persistence', name: 'eclipselink', version: '2.6.4'
		
		// JAX-RS
		compile group: 'javax.ws.rs', name: 'javax.ws.rs-api', version: '2.0.1'
		
		// Jackson
		compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.8.4'
		compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.8.4'

		// servlet
		compileOnly group: 'javax.servlet', name: 'javax.servlet-api', version: '3.1.0'
		
		// Log4J
		compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.7'
		compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.7'
		
		// SLF4J
		compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.22'
		compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.22'
		
		compile group: 'nts.gul', name: 'nts.gul', version: '0.20'
		compile group: 'nts.arc', name: 'nts.arc', version: '0.34.2'
		
		compile group: 'base', name: 'nts.uk.shr.com', version: '0.1'
	}
}

project (':ctx:workflow:nts.uk.ctx.workflow.ws') {
	dependencies {
		compile project(':ctx:workflow:nts.uk.ctx.workflow.app')
	}
}
project (':ctx:workflow:nts.uk.ctx.workflow.dom') {
	dependencies {
	}
}
project (':ctx:workflow:nts.uk.ctx.workflow.app') {
	dependencies {
		compile group: 'base', name: 'nts.uk.shr.find', version: '0.1'
		
		compile project(':ctx:workflow:nts.uk.ctx.workflow.dom')
	}
}
project (':ctx:workflow:nts.uk.ctx.workflow.infra') {
	dependencies {
		compile project(':ctx:workflow:nts.uk.ctx.workflow.dom')
	}
}

artifactory {
	contextUrl = "${artifactory_contextUrl}"   //The base Artifactory URL if not overridden by the publisher/resolver
	publish {
		repository {
			repoKey = 'libs-release-local'
			username = "${artifactory_user}"
			password = "${artifactory_password}"
			maven = true
			
		}
	}
	resolve {
		repository {
			repoKey = 'plugins-release'
			username = "${artifactory_user}"
			password = "${artifactory_password}"
			maven = true
			
		}
	}
}