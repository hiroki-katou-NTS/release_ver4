<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"
	  xmlns:ui="http://java.sun.com/jsf/facelets"
	  xmlns:com="http://xmlns.jcp.org/jsf/component"
	  xmlns:h="http://xmlns.jcp.org/jsf/html">

	<body>
		
		<ui:composition template="../../../master/base.xhtml">
			<ui:define name="htmlHead">
				<script>var dialogSize = { width: 300, height: 200 };</script>
				
				<com:stylefile path="../catalog/catalog.css" />
				<com:scriptfile set="IGNITE" />
				<com:scriptfile path="start.js" />
				<com:scriptfile path="../catalog/catalog.js" />
			</ui:define>
			
			<ui:define name="content">
				<div id="contents-area">
					<div id="side-menu" class="cf"></div>
					<div id="content" class="cf">
						<h1>SearchBox Sample</h1>						
						<h2>Overview</h2>						
						<div class="cf">
							<div style="float:left">																					
								<div style="width: 700px" data-bind="ntsSearchBox: {items: dataSource, selected: singleSelectedCode, selectedKey: 'code', childField: 'childs', filteredItems: filteredData, fields: ['name', 'code']}" />																																														
								<h3>Single Selection TreeGrid</h3>
								<table id="treegrid1"
									data-bind="ntsTreeGridView:{
										width: 700,
										height: 250,
										options: dataSource,
										value: singleSelectedCode,								
										optionsValue: 'code',
										optionsChild: 'childs',
										optionsText: 'nodeText',
										multiple: false,
										enable: true,										
										showCheckBox: false}"
									class="cf">
								</table>
							</div>
							<div style="float:left">
								<br/><br/>
								<h4>Your single selected code:</h4>
								<span data-bind="text: singleSelectedCode"></span>
							</div>
						</div>
						
						<div class="cf">
							<div style="float:left">																					
								<div style="width: 700px" data-bind="ntsSearchBox: {items: dataSource2, selected: selectedCodes2, selectedKey: 'code', childField: 'childs', filteredItems: filteredData2, fields: ['name', 'code']}" />																																														
								<h3>Multi Selection TreeGrid</h3>
								<table id="treegrid2"
									data-bind="ntsTreeGridView:{
										width: 700,
										height: 250,
										options: dataSource2,
										value: selectedCodes2,								
										optionsValue: 'code',
										optionsChild: 'childs',
										optionsText: 'nodeText',
										multiple: true,
										enable: true,										
										showCheckBox: true}"
									class="cf">
								</table>
							</div>
							<div style="float:left">
								<br/><br/>
								<h4>Your multi selected codes:</h4>
								<span data-bind="text: selectedCodes2"></span>
							</div>
						</div>
						<article class="cf">
							<div class="tabs">
								<ol>
									<li><a href="#tabs-html">HTML Binding</a></li>
									<li><a href="#tabs-viewmodel">ViewModel</a></li>
								</ol>
								<div id="tabs-html" class="cf">
									<h2>HTML</h2>
<pre><![CDATA[<!--SINGLESELECT EXAMPLE-->
<div class="cf">
	<div style="float:left">																					
		<div style="width: 700px" data-bind="ntsSearchBox: {
		items: dataSource, 
		filteredItems: filteredData, 
		selected: singleSelectedCode, 
		selectedKey: 'code', 
		childField: 'childs', 
		fields: ['name', 'code']}" />																																														
		<h3>Single Selection TreeGrid</h3>
		<table id="treegrid1"
			data-bind="ntsTreeGridView:{
				width: 700,
				height: 250,
				options: dataSource,
				value: singleSelectedCode,								
				optionsValue: 'code',
				optionsChild: 'childs',
				optionsText: 'nodeText',
				multiple: false,
				enable: true,										
				showCheckBox: false}"
			class="cf">
		</table>
	</div>
	<div style="float:left">
		<br/><br/>
		<h4>Your single selected code:</h4>
		<span data-bind="text: singleSelectedCode"></span>
	</div>
</div>
<!--MULTISELECT EXAMPLE-->
<div class="cf">
	<div style="float:left">																					
		<div style="width: 700px" data-bind="ntsSearchBox: {
		items: dataSource2, 
		selected: selectedCodes2, 
		selectedKey: 'code', 
		childField: 'childs', 
		filteredItems: filteredData2, 
		fields: ['name', 'code']}" />																																														
		<h3>Multi Selection TreeGrid</h3>
		<table id="treegrid2"
			data-bind="ntsTreeGridView:{
				width: 700,
				height: 250,
				options: dataSource2,
				value: selectedCodes2,								
				optionsValue: 'code',
				optionsChild: 'childs',
				optionsText: 'nodeText',
				multiple: true,
				enable: true,										
				showCheckBox: true}"
			class="cf">
		</table>
	</div>
	<div style="float:left">
		<br/><br/>
		<h4>Your multi selected codes:</h4>
		<span data-bind="text: selectedCodes2"></span>
	</div>
</div>
]]></pre>
									<h2>API</h2>
									<table>
										<colgroup>
											<col width="200px" />
										</colgroup>
										<thead>
											<tr>
												<th><h4>Binding</h4></th>
												<th><h4>Description</h4></th>
											</tr>
										</thead>
										<tbody>										
											<tr>
												<td>items</td>
												<td>
													<b>Type:</b> array of items, data source of grid<br/>													
													<i>item:</i> object class that store our data<br/>
												</td>
											</tr>
											<tr>
												<td>filteredItems</td>
												<td>
													<b>Type:</b> array of items<br/>
													Save search result in an array for jump list.
													Each time <a style="color: green" href="#nextSearch">next search button</a> clicked / 'enter' pressed, the selectedItem will be the next or 0 from current
													index that match the selectedItem
												</td>
											</tr>
											<tr>
												<td>selected</td>
												<td>
													<b>Type:</b> your correspond selectedCodes or singleSelectedCode<br/>
													This is required. For the search box processing function to compare with current selection													
												</td>
											</tr>
											<tr>
												<td>selectedKey</td>
												<td>
													<b>Type:</b> the attribute of Item objects that we use to store current selection<br/>
													In the above example, this is 'code' attribute as our selection result in singleSelectedCode/selectedCodes
													If not provided, the selection will be treat as Object										
												</td>
											</tr>
											<tr>
												<td>childField</td>
												<td>
													<b>Type:</b> the attribute of Item objects that we use to store each Item childField<br/>													
													If not provided, only level 1 nodes will be searched									
												</td>
											</tr>
											<tr>
												<td>fields</td>
												<td>
													<b>Type:</b> array of attribute to search on<br/>													
													Required. searchbox used this array to compare string on each field.
													This array is priority descending order						
												</td>
											</tr>													
										</tbody>
									</table>
								</div>
								<div id="tabs-viewmodel" class="cf">
								The data with form "DATA" + "2" is for multi select mode example
<pre><![CDATA[class ScreenModel {
    dataSource: any;
    dataSource2: any;
    filteredData: any;
    filteredData2: any;
    singleSelectedCode: any;
    singleSelectedCode2: any;
    selectedCodes: any;
    selectedCodes2: any;
    headers: any;
    constructor() {
        var self = this;
        self.dataSource = ko.observableArray([new Node('0001', 'Hanoi Vietnam', []),
            new Node('0003', 'Bangkok Thailand', []),
            new Node('0004', 'Tokyo Japan', []),
            new Node('0005', 'Jakarta Indonesia', []), 
            new Node('0002', 'Seoul Korea', []),
            new Node('0006', 'Paris France', []),
            new Node('0007', 'United States', [new Node('0008', 'Washington US', []),new Node('0009', 'Newyork US', [])]),                             
            new Node('0010', 'Beijing China', []),
            new Node('0011', 'London United Kingdom', []),
            new Node('0012', '', [])]);
        self.dataSource2 = ko.observableArray([new Node('0001', 'Hanoi Vietnam', []),
            new Node('0003', 'Bangkok Thailand', []),
            new Node('0004', 'Tokyo Japan', []),
            new Node('0005', 'Jakarta Indonesia', []), 
            new Node('0002', 'Seoul Korea', []),
            new Node('0006', 'Paris France', []),
            new Node('0007', 'United States', [new Node('0008', 'Washington US', []),new Node('0009', 'Newyork US', [])]),                             
            new Node('0010', 'Beijing China', []),
            new Node('0011', 'London United Kingdom', []),
            new Node('0012', '', [])]);
        self.filteredData = ko.observableArray(nts.uk.util.flatArray(self.dataSource(),"childs"));
        self.filteredData2 = ko.observableArray(nts.uk.util.flatArray(self.dataSource2(),"childs"));
        self.singleSelectedCode = ko.observable(null);
        self.singleSelectedCode2 = ko.observable(null);
        self.selectedCodes = ko.observableArray([]);
        self.selectedCodes2 = ko.observableArray([]);            
        self.headers = ko.observableArray(["Item Value Header","Item Text Header"]);
    }              
}

class Node {
    code: string;
    name: string;
    nodeText: string;
    childs: any;
    constructor(code: string, name: string, childs: Array<Node>) {
        var self = this;
        self.code = code;
        self.name = name;
        self.nodeText = self.code + ' ' + self.name;
        self.childs = childs;         
    }
}  
this.bind(new ScreenModel());  
});]]></pre>
								</div>
							</div>
						</article>
						<div class="footer cf">
							<button class="previous large">Previous</button>
							<button class="next proceed large">Next</button>
						</div>
					</div>
		   		</div>
			</ui:define>
		</ui:composition>
   	</body>
</html>