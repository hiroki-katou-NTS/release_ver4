<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:com="http://xmlns.jcp.org/jsf/component"
	xmlns:h="http://xmlns.jcp.org/jsf/html">
<body>
	<ui:composition template="../../../../master/base.xhtml">
		<ui:define name="htmlHead">
			<com:stylefile path="main.css" />
			<com:scriptfile set="IGNITE" />
			<com:scriptfile path="service.js" />
			<com:scriptfile path="viewmodel.js" />
			<com:scriptfile path="start.js" />
			<script type="text/javascript">
				var dialogSize = {
					width : 1300,
					height : 800
				};
			</script>
		</ui:define>

		<ui:define name="content">
			<!-- BEGIN FUNCTION AREA -->
			<div id="functions-area">
				<button id="new-button" data-bind="">新規</button>
				<button id="register-button" class="proceed"
					data-bind="enable: $root.errors.isEmpty">登録</button>
				<button id="setting-button" data-bind="click: commonSettingBtnClick">集計項目の設定</button>
				<button id="delete-button" class="danger" data-bind="">削除</button>
				<button id="close-button" data-bind="">閉じる</button>
			</div>

			<!-- END FUNCTION AREA -->

			<!-- BEGIN CONTENT AREA -->
			<div id="contents-area">
				<!-- BEGIN CONTENT LEFT -->
				<div id="contents-left"
					class="bg-green caret-right caret-background">
					<div id="inpSearch" class="ntsSearchBox"
						data-bind="ntsSearchBox: {
										comId: 'outputSettings',
										items: 'items', 
										selected: 'currentCode', 
										selectedKey: 'code', 
										fields: ['name', 'code', 'description']}"
						placeholder="コード・名称"></div>
					<div id="left-grid-list">
						<table id="outputSettings"
							data-bind="ntsGridList: {
							height: 350,
							width: 240,
							dataSource: outputSettings,
							primaryKey: 'code',
							columns: ko.observableArray([
			                    { headerText: 'コード', key: 'code', width: 50 },
			                    { headerText: '名称', key: 'name', width: 50 }
			                ]),
							value: outputSettingSelectedCode
						}"
							class="cf"></table>
					</div>
				</div>
				<!-- END CONTENT LEFT -->

				<!-- BEGIN CONTENT CENTER-->
				<div id="contents-center" class="caret-right caret-background" data-bind="with: outputSettingDetailModel">
					<div class="flex valign-center">
						<div id="lblCodeName" data-bind="ntsFormLabel: {required: true}">コード/名称</div>
						<input id="inpCode"
							data-bind="ntsTextEditor: {value: settingCode, required: true, enable: false}"></input>
						<input id="inpName"
							data-bind="ntsTextEditor: {value: settingName, required: true}"></input>
					</div>

					<!-- BEGIN TAB PANEL -->
					<div id="tab-panel"
						data-bind="ntsTabPanel: { dataSource: categorySettingTabs, active: selectedCategory}">
						<!-- Salary payment Tab -->
						<div id="payment" data-bind="if: selectedCategory() == 'Payment'">
							<com:ko tag="template" bind="{name: 'tab-template1', data: categorySettings()[0]}"></com:ko>
						</div>
						<!-- Salary deduction Tab -->
						<div id="deduction" data-bind="if: selectedCategory() == 'Deduction'">
							<com:ko tag="template" bind="{name: 'tab-template1', data: categorySettings()[1]}"></com:ko>
						</div>
						<!-- Salary attendance Tab -->
						<div id="attendance" data-bind="if: selectedCategory() == 'Attendance'">
							<com:ko tag="template" bind="{name: 'tab-template2', data: categorySettings()[2], afterRender: afterRender}"></com:ko>
						</div>
						<!-- Bonus payment Tab -->
						<div id="article-others" data-bind="if: selectedCategory() == 'ArticleOthers'">
							<com:ko tag="template" bind="{name: 'tab-template2', data: categorySettings()[3], afterRender: afterRender}"></com:ko>
						</div>
					</div>
					<!-- END TAB PANEL -->
				</div>
				<!-- END CONTENT CENTER -->

				<!-- BEGIN CONTENT RIGHT -->
				<div id="contents-right">
					<div id="lblCodeName" data-bind="ntsFormLabel: {required: true}">帳票出力項目の一覧</div>
					<button class="btn-help"
						data-bind="ntsHelpButton: {image: 'test-image.png', position: 'right top', enable: true }">?</button>
					<div id="contents-right-grid-list">
						<table id="reportItems"
							data-bind="ntsGridList: {
							height: 500,
							width: 300,
							options: reportItems,
							primaryKey: 'code',
							columns: reportItemColumns,
							value: reportItemSelected}"
							class="cf"></table>
					</div>
				</div>
				<!-- END CONTENT RIGHT-->
			</div>
			<!-- END CONTENT AREA-->

			<!-- TAB TEMPLATE -->
			<script type="text/html" id="tab-template1">
							<table>
							    <tr>
							        <td>
							            <div data-bind="ntsFormLabel: {required: false}">表に追加できる支給項目</div>
							            <hr />
							            <table id="master-items" data-bind="ntsGridList: {
 															width: 250,
 															height: 180,
 															options: masterItems,
 															optionsValue: 'code',
 															columns: ko.observableArray([
 																{headerText: 'コード', prop: 'code', width: 50},
																{headerText: '名称', prop: 'name', width: 70}
																]),
 															value: masterItemsSelected, multiple: true}"></table>
							        </td>
							        <td>
							            <button style="margin-top: 40px" class="margin-left-10" data-bind="click: moveMasterItem">
							                <i class="icon icon-button-arrow-right"></i>
							            </button>
							        </td>
							        <td rowspan="2" style="vertical-align: top">
							            <div class="margin-left-10">
							                <div data-bind="ntsFormLabel: {required: false}">表に追加した項目</div>
							                <hr />
							                <div class="panel-content-table-right">
							                    <div style="display: inline-block;">
							                        <table id="grid-test" data-bind="ntsGridList: {
																	height: 450,
																	width: 280,
																	options: outputItems,
																	optionsValue: 'code',
																	columns: outputItemColumns,
	 																value: outputItemSelected,
																}, rended: outputItemSelected"></table>
							                    </div>
							                    <div id="up-down" data-bind="ntsUpDown: {
																	targetSource: outputItems,
																	primaryKey: 'code',
																	comId: '#grid-test',
																	type: 'grid'
																}" class=""></div>
							                </div>
							            </div>
							        </td>
							    </tr>
							    <tr>
							        <td>
							            <div style="margin-top: 40px" data-bind="ntsFormLabel: {required: false}">表に追加できる集約項目</div>
							            <hr />
							           <table id="aggregate-items" data-bind="ntsGridList: {
 															width: 250,
 															height: 180,
 															options: aggregateItems,
 															optionsValue: 'code',
 															columns: ko.observableArray([
 																{headerText: 'コード', prop: 'code', width: 50},
																{headerText: '名称', prop: 'name', width: 70}
																]),
 															value: aggregateItemsSelected, multiple: true}"></table>
							        </td>
							        <td>
							            <button style="margin-top: 80px" class="margin-left-10" data-bind="click: moveAggregateItem">
							                <i class="icon icon-button-arrow-right"></i>
							            </button>
							        </td>
							    </tr>
							</table>
			</script>
			<script type="text/html" id="tab-template2">
				<div class="swaplist-label">
					<div class="master-table-label">
						<div data-bind="ntsFormLabel: {}">選択できる給与支給項目</div>
						<div class="head-end"></div>
					</div>
					<div class="sub-table-label">
						<div data-bind="ntsFormLabel: {}">集約する給与支給項目</div>
						<div class="head-end"></div>
					</div>
				</div>
				<div id="swap-list" data-bind="ntsSwapList: {
					showSearchBox: { showLeft : false, showRight: false},
					height: 500,
					width: 750,
					dataSource: outputItems,
					primaryKey: 'code',
					columns: ko.observableArray([
						{headerText: 'コード', prop: 'code', width: 50},
						{headerText: '名称', prop: 'name', width: 70}
					]),
					value: outputItemsSelected}">
				</div>
			</script>
		</ui:define>
	</ui:composition>
</body>
</html>
