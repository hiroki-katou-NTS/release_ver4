<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:com="http://xmlns.jcp.org/jsf/component" xmlns:h="http://xmlns.jcp.org/jsf/html">

<body>

	<ui:composition template="../../../../master/base.xhtml">
		<ui:define name="htmlHead">
			<com:scriptfile set="IGNITE" />
			<script>var dialogSize = { width: 520, height: 700 };</script>
			<com:scriptfile path="/view/kcp/share/list.js" of="/nts.uk.com.web" />
			<!-- kdl048 -->
			<com:stylefile path="kdl048.style.css" />
			<com:scriptfile path="kdl048.a.vm.js" />
		</ui:define>
		<ui:define name="content">
			<div data-bind="ntsFormLabel: {}"> KDL048 - Demo open screen</div>
			<div class="contents-area">
				<div> Attendance Code </div>
				<input data-bind="ntsTextEditor: {
					value: attendanceCode,
					option: {
						textmode: 'text',
						width: '300px',
						textalign: 'left'
					},
					required: false,
					enable: true,
					readonly: true
				}" />
				<div> Attendance Name </div>
				<input data-bind="ntsTextEditor: {
					value: attendanceName,
					option: {
						textmode: 'text',
						width: '300px',
						textalign: 'left'
					},
					required: false,
					enable: true,
					readonly: true
				}" />
				<div> Attendance Item Name: <span data-bind="text: attendanceItemName"></span></div>
				<div> isDisplayTitle </div>
				<div data-bind="ntsRadioBoxGroup: {
					options: [
					{value: true, name: 'True'},
					{value: false, name: 'False'}
					],
					optionsValue: 'value',
					optionsText: 'name',
					value: isDisplayTitle,
					enable: true}">
				</div>
				<div> isDisplayItemName</div>
				<div data-bind="ntsRadioBoxGroup: {
					options: [
					{value: true, name: 'True'},
					{value: false, name: 'False'}
					],
					optionsValue: 'value',
					optionsText: 'name',
					value: isDisplayItemName,
					enable: true}">
				</div>
				<div> isEnableComboBox</div>
				<div data-bind="ntsRadioBoxGroup: {
					options: [
					{value: 2, name: 'True'},
					{value: 1, name: 'False'}
					],
					optionsValue: 'value',
					optionsText: 'name',
					value: isEnableComboBox,
					enable: true}">
				</div>
				<div> isEnableTextEditor</div>
				<div data-bind="ntsRadioBoxGroup: {
					options: [
					{value: 2, name: 'True'},
					{value: 1, name: 'False'}
					],
					optionsValue: 'value',
					optionsText: 'name',
					value: isEnableTextEditor,
					enable: true}">
				</div>
				<div>Position: </div>
				<div data-bind="ntsRadioBoxGroup: {
					options: itemList,
					optionsValue: 'id',
					optionsText: 'name',
					value: position,
					enable: true}">
				</div>
				<div> Tab </div>
				<div data-bind="ntsRadioBoxGroup: {
					options: tabs,
					optionsValue: 'id',
					optionsText: 'name',
					value: tab,
					enable: true}">
				</div>
				<div>
					ColumnIndex (Number)
				</div>
				<div>
					<input data-bind="ntsTextEditor: {
						value: columnIndex,
						option: {
							textmode: 'text',
							width: '100px',
							textalign: 'left'
						},
						required: true,
						enable: true,
						readonly: false
          }" />
        
        </div>
        <span>Selection Data</span>
        <table id="table-Hd-Grant"
            data-bind="ntsGridList: {
              name: '#[KDL048_10]',
              options: data,
              optionsValue: 'itemId',
              columns: columnSelectedItemList,
              multiple: true,
              value: currentCodeList2,
              rows: 10
            }"></table>
				<button id="A8_1" tabindex="7" class="x-large proceed" data-bind="click: open">Open</button>

				<pre>
					<![CDATA[
// Open Dialog KDL048
		open(): void {
		  itemList: KnockoutObservableArray<any>;

        position: KnockoutObservable<number> = ko.observable(1);
        attendanceItemName: KnockoutObservable<string> = ko.observable('勤務種類');
        attendanceCode: KnockoutObservable<string> = ko.observable('02');
        attendanceName: KnockoutObservable<string> = ko.observable('出勤簿');
        columnIndex: KnockoutObservable<number> = ko.observable(1);
        tab: KnockoutObservable<number> = ko.observable(1);
        tabs: KnockoutObservableArray<any>;
        isDisplayItemName: KnockoutObservable<boolean> = ko.observable(true);
        isDisplayTitle: KnockoutObservable<boolean> = ko.observable(true);
        isEnableComboBox: KnockoutObservable<number> = ko.observable(1);
        isEnableTextEditor: KnockoutObservable<number> = ko.observable(1);
        data:  KnockoutObservableArray<SelectedTimeListParam> = ko.observableArray([]);
        currentCodeList2 = [];
        columnSelectedItemList: KnockoutObservableArray<any> = ko.observableArray([
          {
            headerText: this.$i18n("KDL048_11"),
            prop: "operator",
            width: 55,
            columnCssClass: "text-center",
          },
          { headerText: 'ID', prop: "itemId"  },
        ]);
        created() {
          const vm = this;
          vm.itemList = ko.observableArray([
            {
              id: 1,
              name: 'UPPER'
            },
            {
              id: 2,
              name: 'LOWER'
            }
          ])
          vm.tabs = ko.observableArray([
            {
              id: 1,
              name: 'Tab-1'
            },
            {
              id: 2,
              name: 'Tab-2'
            }
          ]);
    
        }
    
        open(): void {
          const vm = this;
          let shareParam: SharedParams = new SharedParams();
          shareParam.titleLine.displayFlag = vm.isDisplayTitle();
          shareParam.titleLine.layoutCode = vm.attendanceCode();
          shareParam.titleLine.layoutName = vm.attendanceName();
          const positionText = vm.position() === 1 ? "上" : "下";
          shareParam.titleLine.directText = vm.$i18n('KWR002_131') + vm.columnIndex() + vm.$i18n('KWR002_132') + positionText + vm.$i18n('KWR002_133');
          shareParam.itemNameLine.displayFlag = vm.isDisplayItemName();
          shareParam.itemNameLine.displayInputCategory = vm.isEnableTextEditor();
          shareParam.itemNameLine.name = vm.attendanceItemName();
          shareParam.attribute.selectionCategory = vm.isEnableComboBox();
          shareParam.attribute.attributeList = [
            new AttendaceType(1, vm.$i18n('KWR002_141')),
            new AttendaceType(2, vm.$i18n('KWR002_142')),
            new AttendaceType(3, vm.$i18n('KWR002_143')),
            new AttendaceType(4, vm.$i18n('KWR002_180')),
            new AttendaceType(5, vm.$i18n('KWR002_181')),
            new AttendaceType(6, vm.$i18n('KWR002_182')),
            new AttendaceType(7, vm.$i18n('KWR002_183'))
          ]
    
          shareParam.diligenceProjectList = [
            new DiligenceProject(1, '予定勤務種類', '', 0),
            new DiligenceProject(28, '勤務種類', '勤務種類', 28),
            new DiligenceProject(2, '予定就業時間帯', '予定就業時間帯', 2),
            new DiligenceProject(3, '予定出勤時刻1', '予定出勤時刻1', 3),
            new DiligenceProject(4, '予定退勤時刻1', '予定退勤時刻1', 4),
            new DiligenceProject(7, '予定休憩開始時刻1', '予定休憩開始時刻1', 7),
            new DiligenceProject(8, '予定休憩終了時刻1', '予定休憩終了時刻1', 8),
            new DiligenceProject(27, '予定時間', '予定時間', 27),
            new DiligenceProject(216, '残業１', '残業１', 216),
            new DiligenceProject(461, '勤務回数', '勤務回数', 461),
            new DiligenceProject(534, '休憩回数', '休憩回数', 534),
            new DiligenceProject(641, 'aaaaaaaaa回数', 'aaaaaaaaa回数', 641),
            new DiligenceProject(642, 'tukijikan回数', 'tukijikan回数', 642),
            new DiligenceProject(643, 'tukikin', 'tukikin', 643),
            new DiligenceProject(644, '出有ｵﾝ無ｵﾌ有ｶｳﾝﾄ（日次ﾄﾘｶﾞ）ｄ', '出有ｵﾝ無ｵﾌ有ｶｳﾝﾄ（日次ﾄﾘｶﾞ）ｄ', 644),
            new DiligenceProject(645, '出有ｵﾝ有ｵﾌ無ｶｳﾝﾄ（日次ﾄﾘｶﾞ）（bb）', '出有ｵﾝ有ｵﾌ無ｶｳﾝﾄ（日次ﾄﾘｶﾞ）（bb）', 645),
            new DiligenceProject(680, '任意項目４０', '任意項目４０', 680),
            new DiligenceProject(681, '任意項目４１', '任意項目４１', 681),
            new DiligenceProject(682, '任意項目４２月別', '任意項目４２月別', 682),
            new DiligenceProject(683, '任意項目４３', '任意項目４３', 683),
            new DiligenceProject(267, '振替休日１', '振替休日１', 267),
            new DiligenceProject(268, '計算休日出勤１', '計算休日出勤１', 268),
            new DiligenceProject(269, '計算振替休日１', '計算振替休日１', 269),
            new DiligenceProject(270, '事前休日出勤１', '事前休日出勤１', 270)
          ];
          shareParam.diligenceProjectList.length
          setShared('attendanceItem', shareParam, true);
    
          nts.uk.ui.windows.sub.modal('/view/kdl/048/index.xhtml').onClosed(() => {
            const attendanceItem = getShared('attendanceRecordExport');
            if (!attendanceItem) {
              return;
            }
            vm.attendanceItemName(attendanceItem.attendanceItemName);
            alert('Code selection in combo: ' +attendanceItem.attribute.selected)
            vm.data = attendanceItem.selectedTimeList;
          });
        }
      } 
	}
				]]>
				</pre>
			</div>
		</ui:define>

	</ui:composition>

</body>

</html>