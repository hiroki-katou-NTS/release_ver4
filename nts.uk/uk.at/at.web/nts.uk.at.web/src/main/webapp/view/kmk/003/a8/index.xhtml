<?xml version='1.0' encoding='UTF-8' ?>
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:com="http://xmlns.jcp.org/jsf/component"
	xmlns:h="http://xmlns.jcp.org/jsf/html">
	<com:ValidatorScript>
		nts.uk.shr.com.time.TimeWithDayAttr
   	</com:ValidatorScript>
	<div class="labelSetting">
		<div data-bind="ntsFormLabel: {required: false}">#{i18n.getText('KMK003_80')}</div>
		<hr/>
	</div>
	<div class="roundingSet">
		<div class="roundSetting">
			<label>#{i18n.getText('KMK003_213')}</label>
			<div class="radioSetting" data-bind="ntsRadioBoxGroup: {
				options: roundingSettings,
				optionsValue: 'code',
				optionsText: 'name',
				value: selectedRoundingSetting,
				enable: true}">
			</div>
		</div>
		<div class="roundSetting">
			<label>#{i18n.getText('KMK003_214')}</label>
			<div class="radioSetting" data-bind="ntsRadioBoxGroup: {
				options: roundingOutSettings,
				optionsValue: 'code',
				optionsText: 'name',
				value: selectedRoundingOutSetting,
				enable: true}">
			</div>
		</div>
	</div>
	
	<div data-bind="ntsTabPanel: { dataSource: tabArrangements, active: selectedTab}">
		<div class="tabArrangement-1">
			<div class="settingArrangement">
				<div class="timeoutSetting" data-bind="with: timeoutSettingModel">
					<div class="labelSetting">
						<div data-bind="ntsFormLabel: {required: false}">#{i18n.getText('KMK003_138')}</div>
						<hr/>
					</div>
					<div data-bind="with: workingHoursModel">
						<label>#{i18n.getText('KMK003_86')}</label>
						<div class="radioBreakTime" data-bind="ntsRadioBoxGroup: {
							options: roundingBreakTimes,
							optionsValue: 'code',
							optionsText: 'name',
							value: selectedRoundingBreakTime,
							enable: true}">
						</div>
						<div class="roundingSet">
							<div class="roundingCombox" data-bind="ntsComboBox: {
								options: roundingTimes,
								optionsValue: 'code',
								visibleItemsCount: 5,
								value: selectedRoundingTime,
								optionsText: 'name',
								editable: true,
								enable: true,
								columns: [
									{ prop: 'name', length: 10 }
								]}">
							</div>
							<div data-bind="ntsSwitchButton: {
								options: roundingProcesses,
								optionsValue: 'code',
								optionsText: 'name',
								value: selectedRoundingProcess,
								enable: true }">
							</div>
						</div>
					</div>
					<div data-bind="with: overtimeHoursModel" class="groubSetting">
						<label>#{i18n.getText('KMK003_89')}</label>
						<div class="radioBreakTime" data-bind="ntsRadioBoxGroup: {
							options: roundingBreakTimes,
							optionsValue: 'code',
							optionsText: 'name',
							value: selectedRoundingBreakTime,
							enable: true}">
						</div>
						<div class="roundingSet">
							<div class="roundingCombox" data-bind="ntsComboBox: {
								options: roundingTimes,
								optionsValue: 'code',
								visibleItemsCount: 5,
								value: selectedRoundingTime,
								optionsText: 'name',
								editable: true,
								enable: true,
								columns: [
									{ prop: 'name', length: 10 }
								]}">
							</div>
							<div data-bind="ntsSwitchButton: {
								options: roundingProcesses,
								optionsValue: 'code',
								optionsText: 'name',
								value: selectedRoundingProcess,
								enable: true }">
							</div>
						</div>
					</div>
					<div data-bind="with: restPeriodHoursModel" class="groubSetting">
						<label>#{i18n.getText('KMK003_90')}</label>
						<div class="radioBreakTime" data-bind="ntsRadioBoxGroup: {
							options: roundingBreakTimes,
							optionsValue: 'code',
							optionsText: 'name',
							value: selectedRoundingBreakTime,
							enable: true}">
						</div>
						<div class="roundingSet">
							<div class="roundingCombox" data-bind="ntsComboBox: {
								options: roundingTimes,
								optionsValue: 'code',
								visibleItemsCount: 5,
								value: selectedRoundingTime,
								optionsText: 'name',
								editable: true,
								enable: true,
								columns: [
									{ prop: 'name', length: 10 }
								]}">
							</div>
							<div data-bind="ntsSwitchButton: {
								options: roundingProcesses,
								optionsValue: 'code',
								optionsText: 'name',
								value: selectedRoundingProcess,
								enable: true }">
							</div>
						</div>
					</div>
				</div>
				<div class="deductionTimeSetting" data-bind="with: deductionTimeSettingModel">
					<div class="labelSetting">
						<div data-bind="ntsFormLabel: {required: false}">#{i18n.getText('KMK003_93')}</div>
						<hr/>
					</div>
					<div data-bind="with: workingHoursModel">
						<div class="radioBreakTime" data-bind="ntsRadioBoxGroup: {
							options: roundingBreakTimes,
							optionsValue: 'code',
							optionsText: 'name',
							value: selectedRoundingBreakTime,
							enable: true}">
						</div>
						<div class="roundingSet">
							<div class="roundingCombox" data-bind="ntsComboBox: {
								options: roundingTimes,
								optionsValue: 'code',
								visibleItemsCount: 5,
								value: selectedRoundingTime,
								optionsText: 'name',
								editable: true,
								enable: true,
								columns: [
									{ prop: 'name', length: 10 }
								]}">
							</div>
							<div data-bind="ntsSwitchButton: {
								options: roundingProcesses,
								optionsValue: 'code',
								optionsText: 'name',
								value: selectedRoundingProcess,
								enable: true }">
							</div>
						</div>
					</div>
					<div data-bind="with: overtimeHoursModel" class="groubSetting">
						<div class="radioBreakTime" data-bind="ntsRadioBoxGroup: {
							options: roundingBreakTimes,
							optionsValue: 'code',
							optionsText: 'name',
							value: selectedRoundingBreakTime,
							enable: true}">
						</div>
						<div class="roundingSet">
							<div class="roundingCombox" data-bind="ntsComboBox: {
								options: roundingTimes,
								optionsValue: 'code',
								visibleItemsCount: 5,
								value: selectedRoundingTime,
								optionsText: 'name',
								editable: true,
								enable: true,
								columns: [
									{ prop: 'name', length: 10 }
								]}">
							</div>
							<div data-bind="ntsSwitchButton: {
								options: roundingProcesses,
								optionsValue: 'code',
								optionsText: 'name',
								value: selectedRoundingProcess,
								enable: true }">
							</div>
						</div>
					</div>
					<div data-bind="with: restPeriodHoursModel" class="groubSetting">
						<div class="radioBreakTime" data-bind="ntsRadioBoxGroup: {
							options: roundingBreakTimes,
							optionsValue: 'code',
							optionsText: 'name',
							value: selectedRoundingBreakTime,
							enable: true}">
						</div>
						<div class="roundingSet">
							<div class="roundingCombox" data-bind="ntsComboBox: {
								options: roundingTimes,
								optionsValue: 'code',
								visibleItemsCount: 5,
								value: selectedRoundingTime,
								optionsText: 'name',
								editable: true,
								enable: true,
								columns: [
									{ prop: 'name', length: 10 }
								]}">
							</div>
							<div data-bind="ntsSwitchButton: {
								options: roundingProcesses,
								optionsValue: 'code',
								optionsText: 'name',
								value: selectedRoundingProcess,
								enable: true }">
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
		<div class="tabArrangement-2">
			<div class="timeoutSetting">
				<div class="labelSetting">
					<div data-bind="ntsFormLabel: {required: false}">#{i18n.getText('KMK003_188')}</div>
					<hr/>
				</div>
				<div data-bind="with: publicSettingModel">
					<div data-bind="with: workingHoursModel">
						<label>#{i18n.getText('KMK003_86')}</label>
						<div class="radioBreakTime" data-bind="ntsRadioBoxGroup: {
							options: roundingBreakTimes,
							optionsValue: 'code',
							optionsText: 'name',
							value: selectedRoundingBreakTime,
							enable: true}">
						</div>
						<div class="roundingSet">
							<div class="roundingCombox" data-bind="ntsComboBox: {
								options: roundingTimes,
								optionsValue: 'code',
								visibleItemsCount: 5,
								value: selectedRoundingTime,
								optionsText: 'name',
								editable: true,
								enable: true,
								columns: [
									{ prop: 'name', length: 10 }
								]}">
							</div>
							<div data-bind="ntsSwitchButton: {
								options: roundingProcesses,
								optionsValue: 'code',
								optionsText: 'name',
								value: selectedRoundingProcess,
								enable: true }">
							</div>
						</div>
					</div>
					<div data-bind="with: overtimeHoursModel" class="groubSetting">
						<label>#{i18n.getText('KMK003_89')}</label>
						<div class="radioBreakTime" data-bind="ntsRadioBoxGroup: {
							options: roundingBreakTimes,
							optionsValue: 'code',
							optionsText: 'name',
							value: selectedRoundingBreakTime,
							enable: true}">
						</div>
						<div class="roundingSet">
							<div class="roundingCombox" data-bind="ntsComboBox: {
								options: roundingTimes,
								optionsValue: 'code',
								visibleItemsCount: 5,
								value: selectedRoundingTime,
								optionsText: 'name',
								editable: true,
								enable: true,
								columns: [
									{ prop: 'name', length: 10 }
								]}">
							</div>
							<div data-bind="ntsSwitchButton: {
								options: roundingProcesses,
								optionsValue: 'code',
								optionsText: 'name',
								value: selectedRoundingProcess,
								enable: true }">
							</div>
						</div>
					</div>
					<div data-bind="with: restPeriodHoursModel" class="groubSetting">
						<label>#{i18n.getText('KMK003_90')}</label>
						<div class="radioBreakTime" data-bind="ntsRadioBoxGroup: {
							options: roundingBreakTimes,
							optionsValue: 'code',
							optionsText: 'name',
							value: selectedRoundingBreakTime,
							enable: true}">
						</div>
						<div class="roundingSet">
							<div class="roundingCombox" data-bind="ntsComboBox: {
								options: roundingTimes,
								optionsValue: 'code',
								visibleItemsCount: 5,
								value: selectedRoundingTime,
								optionsText: 'name',
								editable: true,
								enable: true,
								columns: [
									{ prop: 'name', length: 10 }
								]}">
							</div>
							<div data-bind="ntsSwitchButton: {
								options: roundingProcesses,
								optionsValue: 'code',
								optionsText: 'name',
								value: selectedRoundingProcess,
								enable: true }">
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</ui:composition>