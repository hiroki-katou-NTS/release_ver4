<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:com="http://xmlns.jcp.org/jsf/component"
	xmlns:h="http://xmlns.jcp.org/jsf/html">
	<body>
		<ui:composition template="../../../../master/base.xhtml">
			<ui:define name="htmlHead">
				<com:ValidatorScript>
					nts.uk.ctx.at.schedule.dom.budget.premium.PremiumRate
					nts.uk.ctx.at.schedule.dom.budget.premium.PersonCostMemo
   				</com:ValidatorScript>
				<com:scriptfile set="IGNITE" />
				<com:scriptfile path="../shr/kml001.shr.servicebase.js" />
				<com:scriptfile path="../shr/kml001.shr.vmbase.js" />
				<com:scriptfile path="kml001.a.vm.js" />
				<com:scriptfile path="kml001.a.start.js" />
				<com:stylefile path="kml001.a.main.css" />
			</ui:define>
			
			<ui:define name="content">
				<div id="functions-area">
					<div class="valign-center control-group">
						<button class="proceed short-button" data-bind="click: saveData,  enable: $root.errors.isEmpty">#{i18n.getText('KML001_2')}</button>
						<button data-bind="click: premiumDialog">#{i18n.getText('KML001_3')}</button>						
						<button id="print-button" data-bind="click: opencdl028Dialog">#{i18n.getText('KMK007_4')}</button>
					</div>
				</div>
				<div id="contents-area" class="fixed-flex-layout">
						<div class="fixed-flex-layout-left">
							<div class="caret-right caret-background bg-green">
								<div>
									<button class="dateControlBtn" data-bind="click: createDialog">#{i18n.getText('KML001_41')}</button>
									<button class="dateControlBtn" data-bind="click: editDialog, enable: !isInsert() &amp;&amp; isLastItem()">#{i18n.getText('KML001_42')}</button>
								</div>
								<div id="dateRange-list-content">
									<table id="dateRange-list" data-bind="ntsGridList: {
										name: '#[KML001_6]', 
										height: 290,
										options: gridPersonCostList,
										optionsValue: 'dateRange',
										columns: ko.observableArray([
							                { headerText: '', prop: 'dateRange' }]),
										value: currentGridPersonCost }">
									</table>
								</div>
								
							</div>
						</div>
						<div class="fixed-flex-layout-right">
							<div class="table">
								<div class="cell column1">
									<div data-bind="ntsFormLabel: { required: true }">#{i18n.getText('KML001_9')}</div>
								</div>
								<div class="cell valign-center">
									<div>
										<div id="startDateInput" data-bind="ntsDatePicker: {
											name: '#[KML001_9]',
											value: newStartDate,
											dateFormat: 'YYYY/MM/DD',
											valueFormat: 'YYYY/MM/DD',
											required: true,
											enable: isInsert }" />
									</div>
								</div>
							</div>
							<div class="table" style="height:43px">
								<div class="cell column1">
									<div data-bind="ntsFormLabel: { required: true }">#{i18n.getText('KML001_10')}</div>
								</div>
								<div class="cell valign-center" data-bind="with: currentPersonCost">
									<div id="combo-box"  data-bind="ntsComboBox: {
															name: '#[KML001_27]',
															options: [
												                { code: 0, name: '#{i18n.getText('KML001_22')}' },
												                { code: 1, name: '#{i18n.getText('KML001_23')}' },
												                { code: 2, name: '#{i18n.getText('KML001_24')}' },
												                { code: 3, name: '#{i18n.getText('KML001_25')}' },
												                { code: 4, name: '#{i18n.getText('KML001_26')}' }],
															optionsValue: 'code',
															value: unitPrice,
															optionsText: 'name',
															dropDownAttachedToBody:true,
															enable: true }">
									</div>
								</div>
								<div class="cell" style="padding-left:20px">
									<button data-bind="ntsHelpButton: {	image: 'IMG_KML001_1.png',
																	position: 'bottom center',
																	enable: true }">?</button>
								</div>
							</div>
							<div class="table">
								<div class="item-valign-top" data-bind="ntsFormLabel: { constraint: 'PersonCostMemo' }">#{i18n.getText('KML001_11')}</div>
								<a data-bind="with: currentPersonCost">
									<textarea id="memo"  data-bind="ntsMultilineEditor: {
										name: '#[KML001_11]',
										value: memo,
										constraint: 'PersonCostMemo'}" />
								</a>
							</div>
							<div class="table" id="premium-set-div">
								<table id="premium-set-tbl"> 
									<thead>
										<tr>
											<th>#{i18n.getText('KML001_12')}</th>
											<th>#{i18n.getText('KML001_13')}</th>
											<th>#{i18n.getText('KML001_14')}</th>
										</tr>
									</thead>
									<tbody data-bind="foreach: currentPersonCost().premiumSets">
										<tr data-bind="css: { notUse: useAtr() == 0 }">
											<td style="word-wrap: break-word;" data-bind="text: (name()=='')?'ITEM'+($index()+1):name()"></td>
											<td>
												<span>
													<input class="premiumInput premiumPercent" data-bind="ntsNumberEditor: {
															name: '#[KML001_13]',
															value: rate,
															constraint: 'PremiumRate',
															option: { 
																width: '80px',
																decimallength: 0, 
																unitID: 'PERCENT' 
															},
															required: true, 
															enable: true }" />
												</span>
											</td>
											<td class="control-group valign-center">
												<div class="cell">
													<button class="small" data-bind="click: function(){ $parent.selectDialog($data, $index())}">#{i18n.getText('KML001_15')}</button>
												</div>
												<div class="cell">
													<input class="premiumInput premiumItems" data-bind="ntsTextEditor: {
													name: '#[KML001_14]',
													value: $parent.viewAttendanceItems()[$index()],
													constraint: 'Memo',
													option: { width: '400px' },
													enable: true,
													readonly: true }" />	
												</div>
											</td>
										</tr>
									</tbody>
								</table>
							</div>
						</div>
				</div>
			</ui:define>
		</ui:composition>
   	</body>
</html>